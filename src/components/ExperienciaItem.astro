---
interface tags {
  name: string;
  class: string;
  icon: any;
}

export interface Props {
  date: string;
  title: string;
  description: string;
  link?: string;
  tags: tags[];
}
const { date, title, description, link, tags } = Astro.props;
---

<div
  class="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -start-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"
>
</div>
<time class="mb-1 text-sm font-normal leading-none text-sky-100/80">
  {date}
</time>
<h3 class="text-lg font-semibold text-yellow-200 mt-2">
  {title}
</h3>
<p class="text-base font-normal text-gray-200 text-pretty my-1">
  {description}
</p>
<ul class="flex py-2 flex-wrap">
  {
    tags.map((tag) => (
      <li>
        <span
          class={`text-xs py-1 px-2 flex gap-x-1 rounded-full justify-center ${tag.class}`}
        >
          <tag.icon class="size-4" />
          {tag.name}
        </span>
      </li>
    ))
  }
</ul>
{
  link && (
    <a
      href={link}
      class="mt-4 inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:outline-none focus:ring-gray-100 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700 dark:focus:ring-gray-700"
      target="_blank"
    >
      Ver Sitio...
      <svg
        class="w-3 h-3 ms-2 rtl:rotate-180"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 14 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M1 5h12m0 0L9 1m4 4L9 9"
        />
      </svg>
    </a>
  )
}
